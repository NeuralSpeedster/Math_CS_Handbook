#import "../util.typ": *

== Основные правила комбинаторики


*Правило суммы.* Если элемент множества $A$ можно выбрать $m$ способами, а элемент множества $B$ $n$ способами, то выбор "либо A, либо B" может быть сделан $m + n$ способами, при условии, что множества $A$ и $B$ _не пересекаются_.

#proof(
  [_Доказательство:_ Количество способов выбрать "либо A, либо B" равно мощности множества $A union B$. По условию $A inter B = emptyset.rev$, поэтому надо доказать лемму:
  $ A inter B = emptyset.rev =>|A union B| = |A| + |B| $
  _Доказательство леммы:_ пусть $ A = {a_1, ..., a_m}$ и $ B = {b_1, ..., b_n}$ Тогда $ A union B = {a_1, ..., a_m, b_1, ..., b_n} $ Здесь существенно использовано то, что $A inter B = emptyset.rev$, так как тогда $forall a in A, space forall b in B: space a != b$. Следовательно, $|A union B| = m + n. square.filled$

  По лемме, $|A union B| = |A| + |B|$, что и требовалось доказать. $square.filled$

  ]
)

*Правило произведения.* Если объект $A$ можно выбрать $m$ способами и для каждого выбора $A$ объект $B$ можно выбрать $n$ способами, то количество способов выбрать #underline("упорядоченные",) пары $(A,B)$ равно $m dot n$. 



